variables:
  STACK: RomMaster
  #
  SLN_SOLUTION_NAME: "Wally.RomMaster.ApiGateway"
  API_PROJECT_NAME: "Wally.RomMaster.ApiGateway.WebApi"
  #
  FILE_SOLUTION_NAME: "Wally.RomMaster.FileService"
  FILE_API_PROJECT_NAME: "Wally.RomMaster.FileService.WebApi"
  FILE_PKG_PROJECT_NAME: "Wally.RomMaster.FileService.Application.Messages"
  FILE_NPM_PROJECT_NAME: "Wally.RomMaster.FileService.Application.Contracts"
  #
  HASH_SOLUTION_NAME: "Wally.RomMaster.HashService"
  HASH_API_PROJECT_NAME: "Wally.RomMaster.HashService.WebApi"
  HASH_PKG_PROJECT_NAME: "Wally.RomMaster.HashService.Application.Messages"
  HASH_NPM_PROJECT_NAME: "Wally.RomMaster.HashService.Application.Contracts"
  #
  STORYBOOK_WEB_NAME: "wally.rommaster.storybook.webapp"
  WEB_PROJECT_NAME: "wally.rommaster.webapp"
  #
  VERSION: "0.1.${CI_PIPELINE_ID}"
  #CI_DEBUG_TRACE: "true"

stages:
  - build
  - test
  - publish
  - deploy

build:sln:
  extends:
    - .build:dotnet
  variables:
    SOLUTION_NAME: ${SLN_SOLUTION_NAME}

build:file_sln:
  extends:
    - .build:dotnet
  variables:
    SOLUTION_NAME: ${FILE_SOLUTION_NAME}

build:hash_sln:
  extends:
    - .build:dotnet
  variables:
    SOLUTION_NAME: ${HASH_SOLUTION_NAME}

build:storybook_web:
  extends:
    - .build:node
  variables:
    PROJECT_NAME: ${STORYBOOK_WEB_NAME}
    LEGACY_PEER_DEPS: "true"

build:web:
  extends:
    - .build:node
  variables:
    PROJECT_NAME: ${WEB_PROJECT_NAME}

test:sln:
  extends:
    - .test:dotnet
  needs:
    - build:sln
  variables:
    SOLUTION_NAME: ${SLN_SOLUTION_NAME}

test:file_sln:
  extends:
    - .test:dotnet
  needs:
    - build:file_sln
  variables:
    SOLUTION_NAME: ${FILE_SOLUTION_NAME}

test:hash_sln:
  extends:
    - .test:dotnet
  needs:
    - build:hash_sln
  variables:
    SOLUTION_NAME: ${HASH_SOLUTION_NAME}

test:file_npm:
  extends:
    - .test:node
  needs:
    - test:file_sln
  variables:
    PROJECT_NAME: ${FILE_NPM_PROJECT_NAME}/generated
  allow_failure: true

test:hash_npm:
  extends:
    - .test:node
  needs:
    - test:hash_sln
  variables:
    PROJECT_NAME: ${HASH_NPM_PROJECT_NAME}/generated
  allow_failure: true

test:web:
  extends:
    - .test:node
  needs:
    - build:web
  variables:
    PROJECT_NAME: ${WEB_PROJECT_NAME}
  allow_failure: true

publish:api:
  extends:
    - .publish:dotnet
  needs:
    - test:sln
  variables:
    PROJECT_NAME: ${API_PROJECT_NAME}

publish:file_api:
  extends:
    - .publish:dotnet
  needs:
    - test:file_sln
  variables:
    PROJECT_NAME: ${FILE_API_PROJECT_NAME}

publish:hash_api:
  extends:
    - .publish:dotnet
  needs:
    - test:hash_sln
  variables:
    PROJECT_NAME: ${HASH_API_PROJECT_NAME}

publish:file_pkg:
  extends:
    - .publish:nuget
  needs:
    - test:file_sln
  variables:
    PROJECT_NAME: ${FILE_PKG_PROJECT_NAME}

publish:hash_pkg:
  extends:
    - .publish:nuget
  needs:
    - test:hash_sln
  variables:
    PROJECT_NAME: ${HASH_PKG_PROJECT_NAME}

publish:docker:api:
  extends:
    - .publish:docker
  needs:
    - publish:api
  variables:
    PROJECT_NAME: ${API_PROJECT_NAME}

publish:docker:file_api:
  extends:
    - .publish:docker
  needs:
    - publish:file_api
  variables:
    PROJECT_NAME: ${FILE_API_PROJECT_NAME}

publish:docker:hash_api:
  extends:
    - .publish:docker
  needs:
    - publish:hash_api
  variables:
    PROJECT_NAME: ${HASH_API_PROJECT_NAME}

publish:docker:storybook_web:
  extends:
    - .publish:docker
  needs:
    # - test:web
    - build:storybook_web
  variables:
    PROJECT_NAME: ${STORYBOOK_WEB_NAME}

publish:docker:web:
  extends:
    - .publish:docker
  needs:
    - test:web
  variables:
    PROJECT_NAME: ${WEB_PROJECT_NAME}

deploy:file_pkg:
  extends:
    - .deploy:nuget
  needs:
    - publish:file_pkg
  variables:
    PROJECT_NAME: ${FILE_PKG_NAME}
  environment:
    name: ${ENV}_${FILE_PKG_NAME}
    url: https://www.nuget.org/packages/${FILE_PKG_PROJECT_NAME}

deploy:hash_pkg:
  extends:
    - .deploy:nuget
  needs:
    - publish:hash_pkg
  variables:
    PROJECT_NAME: ${HASH_PKG_NAME}
  environment:
    name: ${ENV}_${HASH_PKG_NAME}
    url: https://www.nuget.org/packages/${HASH_PKG_PROJECT_NAME}

deploy:node:file_npm:
  extends:
    - .deploy:node
  needs:
    - test:file_sln
    # - test:file_npm
  variables:
    PROJECT_NAME: ${FILE_NPM_PROJECT_NAME}/generated
  environment:
    name: ${ENV}_${FILE_NPM_PROJECT_NAME}
    url: https://www.npmjs.com/package/${FILE_NPM_PROJECT_NAME}/v/${VERSION}

deploy:node:hash_npm:
  extends:
    - .deploy:node
  needs:
    - test:hash_sln
    # - test:hash_npm
  variables:
    PROJECT_NAME: ${HASH_NPM_PROJECT_NAME}/generated
  environment:
    name: ${ENV}_${HASH_NPM_PROJECT_NAME}
    url: https://www.npmjs.com/package/${HASH_NPM_PROJECT_NAME}/v/${VERSION}

deploy:container-station:
  extends:
    - .deploy:container-station
  needs:
    - publish:docker:api
    - publish:docker:file_api
    - publish:docker:hash_api
    - publish:docker:storybook_web
    - publish:docker:web
  variables:
    ENV: PROD

include:
  - project: wally/wally.common.pipelines
    ref: master
    file:
      - /src/gitlab-ci.yml
