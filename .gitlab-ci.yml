image: docker:19.03.1

variables:
    ID: wallyrommaster
    DOMAIN: wally.best
    PROJECT_PATH: ./src/Wally.RomMaster
    # TRAEFIK
    TRAEFIK_NETWORK: traefik
    # CI
    CI_REGISTRY: wally.best:1050
    CI_REGISTRY_USER: wally
    CI_REGISTRY_PASSWORD: wally666
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
    # DOCKER_HOST: tcp://docker:2376
    DOCKER_DRIVER: overlay2
    # DOCKER_TLS_CERTDIR: "/certs"
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""

services:
    - name: docker:19.03.0-dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
 
stages:
    - build
    - release
    - deploy

before_script:
    - export

build:
    stage: build
    tags: 
        - docker
    before_script:
        - docker -v
        - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker info
    script:
        - docker build ./src --pull -f $PROJECT_PATH/Dockerfile -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_ID
        - export testcontainer_id=$(docker images --filter "label=test=true" -q | head -1)
        - docker create --name testcontainer $testcontainer_id
        - docker cp testcontainer:/testresults ./testresults
        - ls -a ./testresults/coverage
        - docker rm testcontainer
        - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_ID
    artifacts:
        when: always
        expire_in: 30 days
        paths:
            - ./testresults/**/*
        reports:
            junit: 
                - ./testresults/*-test-result.xml
        
    after_script:
        - docker logout $CI_REGISTRY
        
pages:
    stage: release
    dependencies:
        - build
    script:
        - mv ./testresults/coverage/reports/ public/
    artifacts:
        when: always
        expire_in: 30 days
        paths:
            - public

release:
    stage: release
    tags: 
        - docker
    only:
        - master
    before_script:
        - docker -v
        - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker info
    script:
        - docker pull $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_ID
        - docker tag $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_ID $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest
        - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_ID
    after_script:
        - docker logout $CI_REGISTRY
        
deploy:
    stage: deploy
    tags:
        - ssh
    only:
        - master
    when: manual
    variables:
        GIT_STRATEGY: none
        GIT_CHECKOUT: "false"
        DOCKER: "/share/CACHEDEV1_DATA/.qpkg/container-station/bin/docker"
    script:
        - $DOCKER login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - $DOCKER stop ${CI_PROJECT_PATH_SLUG} || true && $DOCKER rm ${CI_PROJECT_PATH_SLUG} || true
        - $DOCKER run
            --detach
            --name ${CI_PROJECT_PATH_SLUG}
            --network ${TRAEFIK_NETWORK}
            --volume "/share/Container/Wally.DevOps/auth/webserver.pfx:/cert/webserver.pfx:ro"
            --env "ASPNETCORE_URLS=http://+:80;https://+:443"
            --env "ASPNETCORE_Kestrel__Certificates__Default__Path=/cert/webserver.pfx"
            --env "ASPNETCORE_Kestrel__Certificates__Default__Password=ce43fbef-8a4a-4e9f-864d-9077e4b2d22e"
            --label "traefik.enable=true"
            --label "traefik.http.routers.${CI_PROJECT_PATH_SLUG}.entrypoints=http"
            --label "traefik.http.routers.${CI_PROJECT_PATH_SLUG}.rule=Host(\`${CI_PROJECT_PATH_SLUG}.${DOMAIN}\`)"
            --label "traefik.http.routers.${CI_PROJECT_PATH_SLUG}.middlewares=${CI_PROJECT_PATH_SLUG}-redirect"
            --label "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-secure.entrypoints=https"
            --label "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-secure.rule=Host(\`${CI_PROJECT_PATH_SLUG}.${DOMAIN}\`)"
            --label "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-secure.tls=true"
            --label "traefik.http.middlewares.${CI_PROJECT_PATH_SLUG}-redirect.redirectscheme.scheme=https"
            --label "traefik.http.services.${CI_PROJECT_PATH_SLUG}-secure.loadbalancer.server.port=443"
            $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_ID
        - $DOCKER logout $CI_REGISTRY
