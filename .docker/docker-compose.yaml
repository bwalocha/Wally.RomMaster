version: '3.7'

services:
    # https://rommaster-api.wally.best/
    proxy_api:
        container_name: ${CI_PROJECT_PATH_SLUG}_proxy_api
        restart: "no"
        image: ${CI_REGISTRY_IMAGE}/${PROXY_API_NAME1}:${CI_PIPELINE_ID}
        # depends_on:
            # - db
        volumes:
            - /share/Container/wally-devops/auth/webserver.pfx:/certs/webserver.pfx:ro
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+80
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/certs/webserver.pfx
            - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASS}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api.entrypoints=http"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api.rule=Host(`${STACK}-api.${DOMAIN}`)"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api.middlewares=${CI_PROJECT_PATH_SLUG}-api-redirect"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api-secure.entrypoints=https"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api-secure.tls=true"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api-secure.tls.certresolver=myresolver"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api-secure.rule=Host(`${STACK}-api.${DOMAIN}`)"
            - "traefik.http.middlewares.${CI_PROJECT_PATH_SLUG}-api-redirect.redirectscheme.scheme=https"
            - "traefik.http.services.${CI_PROJECT_PATH_SLUG}-api-secure.loadbalancer.server.port=80"

    # https://rommaster-storybook.wally.best
    storybook_web:
        container_name: ${CI_PROJECT_PATH_SLUG}_storybook_web
        restart: "no"
        image: ${CI_REGISTRY_IMAGE}/${STORYBOOK_WEB_NAME}:${CI_PIPELINE_ID}
        # depends_on:
            # - api
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-storybook_web.entrypoints=http"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-storybook_web.rule=Host(`${STACK}-storybook.${DOMAIN}`)"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-storybook_web.middlewares=${CI_PROJECT_PATH_SLUG}-storybook_web-redirect"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-storybook_web-secure.entrypoints=https"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-storybook_web-secure.tls=true"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-storybook_web-secure.tls.certresolver=myresolver"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-storybook_web-secure.rule=Host(`${STACK}-storybook.${DOMAIN}`)"
            - "traefik.http.middlewares.${CI_PROJECT_PATH_SLUG}-storybook_web-redirect.redirectscheme.scheme=https"
            - "traefik.http.services.${CI_PROJECT_PATH_SLUG}-storybook_web-secure.loadbalancer.server.port=80"

    # db:
        # container_name: ${CI_PROJECT_PATH_SLUG}_db
        # image: mcr.microsoft.com/mssql/server:2019-CU6-ubuntu-16.04
        # restart: "no"
        # # volumes:
           # # - ./data:/var/lib/mssql
           # # - ./backup:/var/opt/mssql/data
        # environment:
            # ACCEPT_EULA: Y
            # SA_PASSWORD: $DB_PASSWORD
            # MSSQL_PID: Developer # Express
            # # MSSQL_DATA_DIR: /var/lib/mssql

# volumes:
  # db-data:

networks:
    default:
        external:
            name: ${DOCKER_NETWORK}
