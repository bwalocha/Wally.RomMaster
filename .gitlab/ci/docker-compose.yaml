version: '3.7'

services:
    #web:
    #    container_name: ${CI_PROJECT_PATH_SLUG}_web
    #    restart: "no"
    #    image: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_PATH_SLUG}:${FRONTEND_PROJECT_NAME}_${CI_PIPELINE_ID}
    #    depends_on:
    #        - api
    #    labels:
    #        - "traefik.enable=true"
    #        - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-web.entrypoints=http"
    #        - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-web.rule=Host(`${STACK}.${DOMAIN}`)"
    #        - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-web.middlewares=${CI_PROJECT_PATH_SLUG}-web-redirect"
    #        - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-web-secure.entrypoints=https"
    #        - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-web-secure.tls=true"
    #        - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-web-secure.tls.certresolver=myresolver"
    #        - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-web-secure.rule=Host(`${STACK}.${DOMAIN}`)"
    #        - "traefik.http.middlewares.${CI_PROJECT_PATH_SLUG}-web-redirect.redirectscheme.scheme=https"
    #        - "traefik.http.services.${CI_PROJECT_PATH_SLUG}-web-secure.loadbalancer.server.port=80"

    api:
        container_name: ${CI_PROJECT_PATH_SLUG}_api
        restart: "no"
        image: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_PATH_SLUG}:${BACKEND_PROJECT_NAME}_${CI_PIPELINE_ID}
        # depends_on:
            # - db
        volumes:
            - /share/Container/wally-devops/auth/webserver.pfx:/certs/webserver.pfx:ro
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+80
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/certs/webserver.pfx
            - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASS}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api.entrypoints=http"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api.rule=Host(`${STACK}.${DOMAIN}`)"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api.middlewares=${CI_PROJECT_PATH_SLUG}-api-redirect"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api-secure.entrypoints=https"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api-secure.tls=true"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api-secure.tls.certresolver=myresolver"
            - "traefik.http.routers.${CI_PROJECT_PATH_SLUG}-api-secure.rule=Host(`${STACK}.${DOMAIN}`)"
            - "traefik.http.middlewares.${CI_PROJECT_PATH_SLUG}-api-redirect.redirectscheme.scheme=https"
            - "traefik.http.services.${CI_PROJECT_PATH_SLUG}-api-secure.loadbalancer.server.port=80"

    # db:
        # container_name: ${CI_PROJECT_PATH_SLUG}_db
        # image: mcr.microsoft.com/mssql/server:2019-CU6-ubuntu-16.04
        # restart: "no"
        # # volumes:
           # # - ./data:/var/lib/mssql
           # # - ./backup:/var/opt/mssql/data
        # environment:
            # ACCEPT_EULA: Y
            # SA_PASSWORD: $DB_PASSWORD
            # MSSQL_PID: Developer # Express
            # # MSSQL_DATA_DIR: /var/lib/mssql

# volumes:
  # db-data:

networks:
    default:
        external:
            name: ${DOCKER_NETWORK}
