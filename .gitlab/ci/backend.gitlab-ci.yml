.backend:
    #only:
    #    changes:
    #        - src/**/*
    #except:
    #    changes:
    #        - src/${BACKEND_PROJECT_NAME}/**/*
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
        SHARED_PATH: ${CI_PROJECT_DIR}/shared
        DOCKER_IMAGE_TEST:   ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_PATH_SLUG}:${BACKEND_PROJECT_NAME}_${CI_PIPELINE_ID}_test
        DOCKER_IMAGE_TAGGED: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_PATH_SLUG}:${BACKEND_PROJECT_NAME}_${CI_PIPELINE_ID}
        DOCKER_IMAGE_LATEST: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_PATH_SLUG}:${BACKEND_PROJECT_NAME}_latest

backend:build:
    stage: build
    extends:
        - .backend
    tags: 
        - docker
    before_script:
        - docker login ${CI_REGISTRY} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
    script:
        - docker
            --log-level debug
            build ./src
            --pull
            -f ./src/${BACKEND_PROJECT_NAME}/Dockerfile
            -t ${DOCKER_IMAGE_TAGGED}
            --build-arg PROJECT_NAME=${BACKEND_PROJECT_NAME}
        - docker push ${DOCKER_IMAGE_TAGGED}
    after_script:
        - docker logout ${CI_REGISTRY}
        
backend:test:
    stage: test
    extends:
        - .backend
    tags:
        - docker
    before_script:
        - docker login ${CI_REGISTRY} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
    script:
        - docker
            --log-level debug
            build ./src
            --pull
            -f ./src/${BACKEND_PROJECT_NAME}/Dockerfile
            -t ${DOCKER_IMAGE_TEST}
            --build-arg PROJECT_NAME=${BACKEND_PROJECT_NAME}
            --target test
        - docker run
            --rm
            --volume ${SHARED_PATH}:/mnt/artifacts:rw
            ${DOCKER_IMAGE_TEST}
    artifacts:
        when: always
        expire_in: 30 days
        paths:
            - ${SHARED_PATH}/**/*
        reports:
            junit: 
                - ${SHARED_PATH}/*-test-result.xml        
    after_script:
        - docker logout ${CI_REGISTRY}
       
#report:       
pages:
    stage: publish
    extends:
        - .backend
    tags:
        - docker
    allow_failure: true
    needs:
        - job: backend:test
          artifacts: true
    variables:
        GIT_STRATEGY: none
        GIT_CHECKOUT: "false"
    script:
        - mv ${SHARED_PATH}/coverage/reports/ public/
    artifacts:
        when: always
        expire_in: 30 days
        paths:
            - public

backend:release:
    stage: publish
    extends:
        - .backend
    tags: 
        - docker
    only:
        - master
        - /^release/.*$/
    needs:
        - job: backend:test
          artifacts: false
    before_script:
        - docker login ${CI_REGISTRY} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
    script:
        - docker pull ${DOCKER_IMAGE_TAGGED}
        - docker tag ${DOCKER_IMAGE_TAGGED} ${DOCKER_IMAGE_LATEST}
        - docker push ${DOCKER_IMAGE_TAGGED}
    after_script:
        - docker logout ${CI_REGISTRY}
